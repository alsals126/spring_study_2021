<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd">
       					   
	<bean id="obj1" class="kr.hs.study.beans.TestBean1" lazy-init="true" scope="prototype"/> <!-- 객체 만들어서 IOC컨테이너에 보관하라고 하기 -->
	
	<!-- constructor DI -->
	<bean id="obj2" class="kr.hs.study.beans.TestBean1">
		<constructor-arg value="10" index="0"/>
		<constructor-arg value="11.11" index="1" type="double"/>
		<constructor-arg value="ncsdb" index="2" type="java.lang.String"/>
		<constructor-arg ref="d1" index="3"/>
	</bean>
	
	<!-- setter DI -->
	<bean id="obj3" class="kr.hs.study.beans.TestBean1">
		<property name="a" value="20"/>
		<property name="b" value="22.22"/>
		<property name="c" value="spring2"/>
		<property name="d1" ref="d1"/>
	</bean>
	
	<bean id="d1" class="kr.hs.study.beans.DataBean1"/><!-- 객체 주입 -->
	
	<bean id="obj4" class="kr.hs.study.beans.TestBean1" autowire="byName"/> <!-- Autowire(자동주입) -->
	<!-- private DataBean d1;에서 d1과 동일한 이름읠 bean 객체 할당 -->
	<!-- 멤버변수 === bean의 id가 동일한 것이 자동주입 -->
	
	<!-- byType: 멤버변수의 타입(클래스 이름) === bean의 타입이 동일한 것 -->
	<bean id="obj5" class="kr.hs.study.beans.TestBean1" autowire="byType"/>
</beans>
